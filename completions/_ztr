#compdef ztr
# ------------------------------------------------------------------------------
# Completion script for ztr (https://github.com/olets/zsh-test-runner).
#
# Copyright (c) 2021-present Henry Bley-Vroman - https://github.com/olets
# ------------------------------------------------------------------------------


local curcontext="$curcontext" state line ret=1

_arguments -C \
    '1: :->cmds' \
    '*:: :->args' && ret=0

case $state in
	cmds)
		_values "ztr command" \
			"help[Show the manpage]" \
			"--help[Show the manpage]" \
			"clear-queue[Clear queue]" \
			"clear-summary[Clear summary]" \
			"queue[With arguments: enqueue a test; without arguments: print queue]" \
			"run-queue[Run queued tests and clear the queue]" \
			"skip[Skip a test]" \
			"summary[Pretty-print summary of counts]" \
			"test[Run a test]" \
			"version[Print the command name and current version]" \
			"--version[Print the command name and current version]" \
			"-v[Print the command name and current version]"
		ret=0
		;;
	args)
		case $line[1] in
			run-queue)
				# [(--quiet | -q)]
				_arguments \
					"(--quiet)--quiet[Silence output]" \
					"(-q)-q[Silence output]"
				ret=0
				;;
			skip)
				# [(--quiet | -q)] <arg> [<name> [<notes>]]
				_arguments \
					"(--quiet)--quiet[Silence output]" \
					"(-q)-q[Silence output]"
				ret=0
				;;
			queue|\
			test)
				# [[(--quiet | -q)] [--emulate <shell>] [--quiet-emulate] <arg> [<name> [<notes>]]]
				_arguments \
					"(--emulate)--emulate[Emulate <shell>]" \
					"(--quiet)--quiet[Silence output]" \
					"(-q)-q[Silence output]" \
					"(--quiet-emulate)--quiet-emulate[Do not warn when a non-zsh shell is emulated.]"
				ret=0
				;;
		esac
	;;
esac

return ret

# vim: ft=zsh
