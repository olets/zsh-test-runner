#!/usr/bin/env zsh
autoload -U colors && colors
source ${0:h}/../ztr.zsh

typeset -i failures
typeset -i passes

should_pass() {
	local result

	eval $* &>/dev/null

	if (( $? )); then
		(( failures++ ))
		result="$fg[red]INCORRECTLY FAILED$reset_color"
	else
		(( passes++ ))
		result="$fg[green]CORRECTLY PASSED$reset_color"
	fi

	'builtin' 'print' $result $1
}

should_fail() {
	local result

	eval $* &>/dev/null

	if (( $? )); then
		(( passes++ ))
		result="$fg[green]CORRECTLY FAILED$reset_color"
	else
		(( failures++ ))
		result="$fg[red]INCORRECTLY PASSED$reset_color"
	fi

	'builtin' 'print' $result $1
}

print \\ntrue/false:
should_pass 'ztr test true'
should_fail 'ztr test false'

print \\n'[[ ]]':
should_pass 'ztr test "[[ 1 == 1 ]]"'
should_fail 'ztr test "[[ 1 == 2 ]]"'

print \\ntest saved as variable
my_cmd='"[[ 1 == 1 ]]"' && should_pass ztr test $my_cmd
my_cmd='"[[ 1 == 2 ]]"' && should_fail ztr test $my_cmd

print \\nvariables in test, \'\"\"\'
my_var=1 && should_pass 'ztr test "[[ $my_var == 1 ]]"'
my_var=2 && should_fail 'ztr test "[[ $my_var == 1 ]]"'

print \\nvariables in test, \"\'\'\"
my_var=1 && should_pass "ztr test '[[ $my_var == 1 ]]'"
my_var=2 && should_fail "ztr test '[[ $my_var == 1 ]]'"

print \\nskip
should_pass 'ztr skip true'
should_pass 'ztr skip false'
should_pass 'ztr skip x && (( ZTR_COUNT_SKIP ))'

print \\nclear passes
should_pass 'ztr test true && ztr clear && [[ $ZTR_COUNT_PASS == 0 ]]'
should_fail 'ztr test true && ztr clear && [[ $ZTR_COUNT_PASS == 1 ]]'

print \\nclear failures
should_pass 'ztr test false || ztr clear && [[ $ZTR_COUNT_FAIL == 0 ]]'
should_fail 'ztr test false || ztr clear && [[ $ZTR_COUNT_FAIL == 1 ]]'

print \\nclear skips
should_pass 'ztr skip x && ztr clear && [[ $ZTR_COUNT_SKIP == 0 ]]'
should_fail 'ztr skip x && ztr clear && [[ $ZTR_COUNT_SKIP == 1 ]]'

'builtin' 'print' \\n$(( passes + failures )) tests were run\
	\\n$passes passed\
	\\n$failures failed
return $failures
